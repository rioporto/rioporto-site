#!/bin/bash

# deploy-whatsapp-api.sh
# Script para deploy do WhatsApp Business API

echo "üì± Iniciando deploy do WhatsApp Business API..."
echo "================================================"

# Cores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Verificar se est√° no diret√≥rio correto
if [ ! -f "package.json" ]; then
    echo -e "${RED}‚ùå Erro: Execute este script na raiz do projeto${NC}"
    exit 1
fi

echo -e "${YELLOW}üîç Verificando TypeScript...${NC}"
npm run type-check

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Erros de TypeScript encontrados. Corrija antes de continuar.${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ TypeScript sem erros!${NC}"

echo -e "${YELLOW}üèóÔ∏è Criando build de produ√ß√£o...${NC}"
npm run build

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Falha no build. Verifique os erros acima.${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Build conclu√≠do com sucesso!${NC}"

# Commit das mudan√ßas
echo -e "${YELLOW}üìù Preparando commit...${NC}"
git add -A

# Verificar se h√° mudan√ßas para commitar
if git diff --staged --quiet; then
    echo -e "${YELLOW}‚ö†Ô∏è  Nenhuma mudan√ßa para commitar${NC}"
else
    git commit -m "feat: implementa WhatsApp Business API (Sprint 2)

- Cria estrutura completa do WhatsApp API
- Adiciona tipos TypeScript para mensagens e cota√ß√µes
- Implementa cliente para enviar/receber mensagens
- Cria webhook para receber mensagens do WhatsApp
- Implementa bot autom√°tico com comandos
- Adiciona painel admin para gerenciar mensagens
- Cria tabelas no banco para hist√≥rico
- Documenta configura√ß√£o do Meta Business

Funcionalidades do bot:
- Responde comandos: OI, COTA√á√ÉO, COMPRAR, VENDER
- Envia cota√ß√µes personalizadas
- Processa confirma√ß√µes e cancelamentos

Status: 25% completo (falta configurar Meta Business)"

    echo -e "${GREEN}‚úÖ Commit realizado!${NC}"
fi

# Push para o reposit√≥rio
echo -e "${YELLOW}üöÄ Enviando para o GitHub...${NC}"
git push origin main

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Push realizado com sucesso!${NC}"
else
    echo -e "${RED}‚ùå Falha no push. Verifique sua conex√£o e tente novamente.${NC}"
    exit 1
fi

echo ""
echo -e "${GREEN}üì± WHATSAPP API DEPLOYED!${NC}"
echo "================================================"
echo -e "${GREEN}‚úÖ Estrutura base implementada${NC}"
echo -e "${GREEN}‚úÖ Bot autom√°tico configurado${NC}"
echo -e "${GREEN}‚úÖ Painel admin criado${NC}"
echo -e "${GREEN}‚úÖ Build de produ√ß√£o criado${NC}"
echo -e "${GREEN}‚úÖ C√≥digo enviado para o GitHub${NC}"
echo -e "${GREEN}‚úÖ Deploy autom√°tico iniciado no Vercel${NC}"
echo ""
echo -e "${YELLOW}üìã Pr√≥ximos passos:${NC}"
echo "1. Execute o SQL no Supabase (whatsapp_setup.sql)"
echo "2. Configure as vari√°veis no .env.local"
echo "3. Configure o webhook no Meta Business"
echo "4. Teste enviando mensagem para o WhatsApp"
echo ""
echo -e "${YELLOW}üìä Progresso do Sprint 2:${NC}"
echo "- WhatsApp API: 25% ‚úÖ"
echo "- Sistema de Coment√°rios: 0%"
echo "- Newsletter: 0%"
echo "- Dashboard: 0%"
echo ""
echo -e "${GREEN}Excelente progresso! WhatsApp API base implementada! üöÄ${NC}"