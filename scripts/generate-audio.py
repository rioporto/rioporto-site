#!/usr/bin/env python3
"""
Script para gerar todos os √°udios do minicurso usando Edge-TTS
Autor: Rio Porto P2P
Data: 29/01/2025
ATUALIZADO: Corrigido nome da voz
"""

import os
import sys
import asyncio
import edge_tts
from pathlib import Path
import json

# Configura√ß√µes - VOZES CORRETAS
# Op√ß√µes de vozes masculinas brasileiras:
# - pt-BR-AntonioNeural
# - pt-BR-FabioNeural  
# - pt-BR-JulioNeural
VOICE = "pt-BR-AntonioNeural"  # Nome correto da voz!
RATE = "+0%"  # Velocidade normal
VOLUME = "+0%"  # Volume normal

# Determinar o diret√≥rio correto
SCRIPT_DIR = Path(__file__).parent
PROJECT_ROOT = SCRIPT_DIR.parent
OUTPUT_DIR = PROJECT_ROOT / "public" / "audio" / "minicurso"

print(f"üìÅ Script rodando em: {SCRIPT_DIR}")
print(f"üìÅ Raiz do projeto: {PROJECT_ROOT}")
print(f"üìÅ Diret√≥rio de sa√≠da: {OUTPUT_DIR}")

# Textos para narra√ß√£o (mesmo conte√∫do anterior)
AUDIO_TEXTS = {
    "01-capa.mp3": """
        Bem-vindo ao Manual P2P: Negocie Bitcoin como um Profissional. 
        
        Este √© o guia definitivo para voc√™ aprender a comprar ou vender Bitcoin 
        com total seguran√ßa e privacidade. 
        
        Sou Johnny Ferreira, especialista em Bitcoin e criptomoedas, e vou guiar 
        voc√™ nesta jornada rumo √† soberania financeira. 
        
        Prepare-se para descobrir os segredos do mercado P2P e transformar sua 
        forma de negociar criptomoedas.
        
        Vamos come√ßar!
    """,
    
    "02-introducao.mp3": """
        Introdu√ß√£o: A Revolu√ß√£o Silenciosa do Dinheiro Ponto a Ponto.
        
        Em 2008, um documento revolucion√°rio intitulado "Bitcoin: Um Sistema de 
        Dinheiro Eletr√¥nico Peer-to-Peer" foi publicado por uma figura an√¥nima 
        conhecida como Satoshi Nakamoto. 
        
        A vis√£o era clara e poderosa: permitir que pagamentos online fossem 
        enviados diretamente de uma parte para outra, sem a necessidade de 
        passar por uma institui√ß√£o financeira. 
        
        Essa ideia de transa√ß√£o "ponto a ponto", ou P2P, √© a alma do Bitcoin 
        e o fundamento de uma nova era de soberania financeira.
        
        Com o tempo, para facilitar o acesso, surgiram as corretoras. 
        Elas ofereceram conveni√™ncia, mas com um custo: a reintrodu√ß√£o de 
        intermedi√°rios. Ao usar uma corretora centralizada, voc√™ confia seus 
        fundos, seus dados e sua privacidade a uma terceira parte.
        
        Hoje, investidores maduros perceberam que a verdadeira promessa das 
        criptomoedas est√° no controle e na liberdade. Esse amadurecimento 
        leva a um retorno √†s origens: a negocia√ß√£o P2P.
        
        Este manual √© seu guia. Nosso objetivo √© fornecer o conhecimento para 
        voc√™ negociar n√£o como um espectador, mas como um profissional ‚Äî com 
        seguran√ßa, confian√ßa e total controle sobre seu patrim√¥nio.
    """,
    
    "03-cap1.mp3": """
        Cap√≠tulo 1: Descomplicando o P2P.
        O Que √© e Como Funciona na Pr√°tica?
        
        P2P √© a abrevia√ß√£o de Peer-to-Peer, que significa "ponto a ponto". 
        
        Pense em vender um item usado online. Voc√™ negocia diretamente com o 
        comprador, sem uma loja como intermedi√°ria. No mundo cripto, √© a mesma 
        l√≥gica: comprar e vender criptomoedas diretamente entre duas pessoas, 
        fora de uma corretora.
        
        A negocia√ß√£o P2P materializa a promessa de transa√ß√µes financeiras diretas, 
        devolvendo o poder e o controle aos indiv√≠duos.
        
        Vamos entender o passo a passo de uma negocia√ß√£o P2P:
        
        Primeiro: Contato e Cota√ß√£o. Voc√™ entra em contato com o vendedor, 
        como a RIO PORTO P2P, e recebe a cota√ß√£o atual.
        
        Segundo: Acordo de Termos. Voc√™s definem a quantidade de cripto 
        e o meio de pagamento, geralmente PIX.
        
        Terceiro: Pagamento e Confirma√ß√£o. O comprador transfere o valor 
        em Reais. O vendedor confirma o recebimento no extrato do banco.
        
        Quarto: Libera√ß√£o das Criptos. Com o pagamento confirmado, o vendedor 
        envia as criptomoedas diretamente para a carteira do comprador.
        
        √â um processo simples, direto e seguro quando feito corretamente.
    """,
    
    "04-cap2.mp3": """
        Cap√≠tulo 2: P2P versus Corretoras.
        Qual o Melhor Caminho para Voc√™?
        
        A negocia√ß√£o P2P oferece vantagens significativas que as corretoras 
        n√£o conseguem replicar.
        
        Primeira vantagem: Privacidade e Controle. No P2P, voc√™ compartilha 
        menos dados pessoais e mant√©m o controle total sobre suas informa√ß√µes.
        
        Segunda: Flexibilidade de Pagamento. Enquanto corretoras limitam suas 
        op√ß√µes, o P2P aceita uma vasta gama de m√©todos de pagamento.
        
        Terceira: Custos Menores. As taxas P2P s√£o geralmente mais competitivas 
        e, principalmente, transparentes. Sem surpresas desagrad√°veis.
        
        Quarta e mais importante: Soberania e Autocust√≥dia. Seus fundos nunca 
        ficam sob cust√≥dia de um terceiro. Voc√™ tem o controle real e imediato 
        dos seus ativos.
        
        Cansado de taxas surpresa e valores que mudam a todo instante? 
        Na RIO PORTO P2P, a regra √© clara: o pre√ßo √© fixo e voc√™ sabe 
        exatamente quanto vai receber antes mesmo de fechar o neg√≥cio.
        
        Acesse nosso site e fa√ßa uma cota√ß√£o para experimentar a diferen√ßa!
    """,
    
    "05-cap3.mp3": """
        Cap√≠tulo 3: Sua Fortaleza Digital.
        O Poder da Autocust√≥dia e das Carteiras.
        
        "Not Your Keys, Not Your Coins" - Se as chaves n√£o s√£o suas, 
        as moedas n√£o s√£o suas.
        
        Este √© o mantra da soberania no mundo das criptomoedas. 
        
        Deixar suas criptos em uma corretora √© como deixar ouro no cofre 
        de um banco: voc√™ confia que eles cuidar√£o bem. Mas se o banco, 
        ou a corretora, falir, for hackeado ou congelar sua conta, 
        voc√™ perde acesso aos seus ativos.
        
        A negocia√ß√£o P2P, combinada com a autocust√≥dia, resolve esse problema. 
        Ao negociar conosco, voc√™ recebe as criptomoedas diretamente em uma 
        carteira que s√≥ voc√™ controla.
        
        Existem dois tipos principais de carteiras:
        
        Hot Wallets, ou Carteiras Quentes: S√£o √≥timas para o dia a dia 
        e pequenas quantias. A vantagem √© a conveni√™ncia. O risco √© que 
        est√£o conectadas √† internet.
        
        Cold Wallets, ou Carteiras Frias: Ideais para guardar grandes 
        valores a longo prazo. Oferecem seguran√ßa m√°xima, mas s√£o menos 
        pr√°ticas para uso di√°rio.
        
        Assumir a autocust√≥dia √© uma mudan√ßa de mentalidade. Exige 
        responsabilidade pessoal, mas garante sua soberania financeira.
        
        Precisa de ajuda? A RIO PORTO P2P oferece consultoria exclusiva 
        de autocust√≥dia. N√≥s guiamos voc√™, passo a passo, na escolha e 
        configura√ß√£o da sua carteira ideal.
    """,
    
    "06-cap4.mp3": """
        Cap√≠tulo 4: Navegando em √Åguas Seguras.
        O Guia Antifraude Definitivo.
        
        O medo de ser enganado √© uma grande barreira no P2P. Mas ao entender 
        como os golpes funcionam, voc√™ se torna capaz de evit√°-los.
        
        Vamos conhecer os principais golpes:
        
        Primeiro: O Golpe do Comprovante Falso. O golpista envia um comprovante 
        de PIX ou TED falso e pressiona pela libera√ß√£o das criptos. 
        Lembre-se: confie APENAS no seu extrato banc√°rio oficial.
        
        Segundo: O Golpe da Triangula√ß√£o. O golpista usa uma terceira v√≠tima 
        para depositar dinheiro na sua conta. Voc√™ envia as criptos para o 
        golpista e depois sua conta banc√°ria fica comprometida.
        
        Como se proteger? Aqui est√° seu checklist de seguran√ßa P2P:
        
        Regra n√∫mero um: Confie APENAS no seu extrato banc√°rio. 
        Nunca em imagens de comprovante.
        
        Regra dois: Negocie apenas com o titular da conta. 
        Pagamento de terceiros √© sinal de alerta m√°ximo.
        
        Regra tr√™s: Comece com pouco ao negociar com algu√©m novo. 
        Construa confian√ßa gradualmente.
        
        Regra quatro: Desconfie de ofertas milagrosas. 
        Pre√ßos muito abaixo do mercado s√£o iscas de golpistas.
        
        A tranquilidade de ter um especialista ao seu lado n√£o tem pre√ßo. 
        Nosso principal produto n√£o √© Bitcoin; √© paz de esp√≠rito. 
        A RIO PORTO P2P gerencia todos esses riscos para voc√™.
    """,
    
    "07-cap5.mp3": """
        Cap√≠tulo 5: A Burocracia sem Medo.
        Legalidade e Impostos no Brasil.
        
        Vamos esclarecer as principais d√∫vidas legais:
        
        P2P √© legal no Brasil? Sim! N√£o h√° nenhuma lei que pro√≠ba a compra 
        e venda de criptomoedas diretamente entre pessoas. O Marco Legal das 
        Criptos, Lei n√∫mero 14.478 de 2022, trouxe ainda mais seguran√ßa 
        jur√≠dica ao setor.
        
        Sobre a IN 1888 da Receita Federal: √â uma declara√ß√£o informativa mensal. 
        Voc√™ deve declarar se o total das suas opera√ß√µes, somando compras e vendas, 
        em P2P ou corretoras estrangeiras ultrapassar 30 mil reais no m√™s.
        
        Quanto ao Imposto de Renda sobre Ganhos de Capital: H√° isen√ß√£o de imposto 
        sobre o lucro para vendas totais de criptoativos de at√© 35 mil reais por m√™s. 
        Acima disso, o lucro √© tributado com al√≠quotas progressivas.
        
        Importante: Essas informa√ß√µes s√£o para fins educativos. 
        Consulte sempre um contador especializado em criptomoedas para 
        orienta√ß√µes espec√≠ficas sobre sua situa√ß√£o.
        
        A RIO PORTO P2P opera com total transpar√™ncia e conformidade legal, 
        facilitando sua vida na hora de declarar.
    """,
    
    "08-cap6.mp3": """
        Cap√≠tulo 6: A Vantagem RIO PORTO P2P.
        Por que somos diferentes?
        
        Nossa vantagem competitiva est√° em quatro pilares fundamentais:
        
        Primeiro: Seguran√ßa Garantida. Nossos processos rigorosos atuam 
        como um escudo contra fraudes. Verificamos cada transa√ß√£o 
        minuciosamente para sua prote√ß√£o.
        
        Segundo: Simplicidade e Suporte Humano. Oferecemos atendimento 
        √°gil e especializado. Voc√™ fala com pessoas reais, n√£o com rob√¥s. 
        Nossa equipe entende suas necessidades e responde rapidamente.
        
        Terceiro: Soberania com Tranquilidade. Somos defensores ferrenhos 
        da autocust√≥dia. Os ativos s√£o enviados diretamente para sua carteira, 
        sem intermedi√°rios, sem cust√≥dia, sem riscos desnecess√°rios.
        
        Quarto: Conformidade e Paz de Esp√≠rito. Operamos com uma empresa 
        devidamente estabelecida no pa√≠s, seguindo todas as regulamenta√ß√µes. 
        Voc√™ negocia com total tranquilidade legal.
        
        E tem mais: Bitcoin a partir de apenas 100 reais, com taxa fixa 
        e sem asteriscos ou letras mi√∫das.
        
        Na RIO PORTO P2P, a transpar√™ncia vem em primeiro lugar. 
        O valor que voc√™ v√™ √© exatamente o valor que voc√™ recebe.
        
        Chega de complica√ß√µes. √â hora de negociar Bitcoin do jeito certo!
    """,
    
    "09-conclusao.mp3": """
        Conclus√£o: D√™ o Pr√≥ximo Passo com Confian√ßa.
        
        Parab√©ns! Voc√™ chegou ao final desta jornada de conhecimento.
        
        A complexidade do P2P se transformou em clareza. Voc√™ agora entende 
        como negociar com seguran√ßa, proteger seus ativos atrav√©s da 
        autocust√≥dia e navegar pelo cen√°rio regulat√≥rio brasileiro.
        
        A mensagem central deste manual √© poderosa: o P2P, feito da maneira 
        correta, √© a express√£o m√°xima de controle e soberania sobre seu 
        patrim√¥nio digital.
        
        Voc√™ aprendeu a identificar e evitar golpes. Compreendeu as vantagens 
        sobre as corretoras tradicionais. Descobriu o poder da autocust√≥dia. 
        E conheceu seus direitos e deveres perante a legisla√ß√£o.
        
        Agora que voc√™ tem o conhecimento, o pr√≥ximo passo √© a a√ß√£o. 
        
        Chega de correr riscos desnecess√°rios. Chega de entregar o controle 
        dos seus ativos para grandes corpora√ß√µes. Chega de taxas escondidas 
        e surpresas desagrad√°veis.
        
        Voc√™ est√° pronto para negociar Bitcoin com a seguran√ßa, a privacidade 
        e a agilidade que voc√™ merece.
        
        A RIO PORTO P2P √© sua parceira de confian√ßa nesta nova fase. 
        Descubra por que nossos clientes negociam com total tranquilidade.
        
        Acesse agora rioporto.com e d√™ o primeiro passo rumo √† sua 
        soberania financeira.
        
        Seja bem-vindo ao futuro das finan√ßas. 
        Seja bem-vindo √† RIO PORTO P2P.
    """
}

async def list_voices_and_select():
    """Lista vozes dispon√≠veis e retorna a melhor op√ß√£o masculina"""
    print("\nüì¢ Buscando vozes dispon√≠veis...")
    try:
        voices = await edge_tts.list_voices()
        pt_voices = [v for v in voices if v["Locale"].startswith("pt-BR")]
        
        male_voices = [v for v in pt_voices if v["Gender"] == "Male"]
        female_voices = [v for v in pt_voices if v["Gender"] == "Female"]
        
        print(f"\nVozes masculinas brasileiras dispon√≠veis:")
        for v in male_voices:
            print(f"   ‚úÖ {v['ShortName']} - {v['FriendlyName']}")
        
        if male_voices:
            selected = male_voices[0]['ShortName']
            print(f"\nüéØ Voz selecionada: {selected}")
            return selected
        else:
            print("‚ö†Ô∏è  Nenhuma voz masculina brasileira encontrada!")
            return None
            
    except Exception as e:
        print(f"‚ö†Ô∏è  Erro ao listar vozes: {e}")
        # Tentar com as vozes conhecidas
        known_voices = ["pt-BR-AntonioNeural", "pt-BR-FabioNeural", "pt-BR-JulioNeural"]
        print(f"\nüîß Tentando com vozes conhecidas: {', '.join(known_voices)}")
        return known_voices[0]

async def test_edge_tts(voice_name):
    """Testa se o edge-tts est√° funcionando com a voz especificada"""
    try:
        print(f"\nüîß Testando Edge-TTS com voz {voice_name}...")
        test_text = "Teste de √°udio"
        test_file = OUTPUT_DIR / "test.mp3"
        
        communicate = edge_tts.Communicate(test_text, voice_name)
        await communicate.save(str(test_file))
        
        if test_file.exists():
            print(f"‚úÖ Edge-TTS est√° funcionando com {voice_name}!")
            test_file.unlink()  # Remove arquivo de teste
            return True
        else:
            print(f"‚ùå Edge-TTS n√£o conseguiu criar arquivo com {voice_name}")
            return False
    except Exception as e:
        print(f"‚ùå Erro ao testar Edge-TTS: {e}")
        return False

async def generate_audio(filename: str, text: str, voice: str):
    """Gera um arquivo de √°udio usando Edge-TTS"""
    try:
        print(f"\nüéôÔ∏è Gerando: {filename}")
        
        # Limpar o texto (remover espa√ßos extras)
        clean_text = " ".join(text.split())
        print(f"   Tamanho do texto: {len(clean_text)} caracteres")
        print(f"   Voz: {voice}")
        
        # Criar o comunicador
        communicate = edge_tts.Communicate(
            clean_text, 
            voice,
            rate=RATE,
            volume=VOLUME
        )
        
        # Caminho completo do arquivo
        output_path = OUTPUT_DIR / filename
        print(f"   Salvando em: {output_path}")
        
        # Gerar e salvar o √°udio
        await communicate.save(str(output_path))
        
        # Verificar se foi criado
        if output_path.exists():
            size = output_path.stat().st_size / 1024  # KB
            print(f"   ‚úÖ Sucesso! Tamanho: {size:.1f} KB")
            return True
        else:
            print(f"   ‚ùå Arquivo n√£o foi criado")
            return False
        
    except Exception as e:
        print(f"   ‚ùå Erro: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

async def main():
    """Fun√ß√£o principal"""
    print("üéôÔ∏è RIO PORTO P2P - Gerador de √Åudios do Minicurso")
    print("=" * 60)
    print(f"Diret√≥rio de sa√≠da: {OUTPUT_DIR}")
    print("=" * 60)
    
    # Verificar Python e edge-tts
    print(f"\nüìä Informa√ß√µes do sistema:")
    print(f"   Python: {sys.version}")
    
    try:
        import edge_tts
        print(f"   Edge-TTS: Instalado ‚úÖ")
    except ImportError:
        print(f"   Edge-TTS: N√ÉO instalado ‚ùå")
        print("\n‚ö†Ô∏è  Por favor, instale o edge-tts:")
        print("   pip install edge-tts")
        return
    
    # Criar diret√≥rio se n√£o existir
    print(f"\nüìÅ Criando diret√≥rio de sa√≠da...")
    OUTPUT_DIR.mkdir(parents=True, exist_ok=True)
    
    if OUTPUT_DIR.exists():
        print(f"   ‚úÖ Diret√≥rio criado/verificado")
    else:
        print(f"   ‚ùå N√£o foi poss√≠vel criar o diret√≥rio")
        return
    
    # Descobrir e selecionar voz
    selected_voice = await list_voices_and_select()
    
    if not selected_voice:
        print("\n‚ùå N√£o foi poss√≠vel encontrar uma voz adequada.")
        return
    
    # Testar edge-tts com a voz selecionada
    if not await test_edge_tts(selected_voice):
        print(f"\n‚ö†Ô∏è  Edge-TTS n√£o funcionou com {selected_voice}.")
        # Tentar outras vozes conhecidas
        for voice in ["pt-BR-FabioNeural", "pt-BR-JulioNeural"]:
            print(f"\nüîß Tentando com {voice}...")
            if await test_edge_tts(voice):
                selected_voice = voice
                break
        else:
            print("\n‚ùå Nenhuma voz funcionou. Verifique sua instala√ß√£o.")
            return
    
    # Gerar todos os √°udios
    total = len(AUDIO_TEXTS)
    success = 0
    
    print(f"\nüöÄ Iniciando gera√ß√£o de {total} arquivos de √°udio...")
    print(f"   Usando voz: {selected_voice}")
    print("   Isso pode levar alguns minutos...\n")
    
    for filename, text in AUDIO_TEXTS.items():
        if await generate_audio(filename, text, selected_voice):
            success += 1
        
        # Pequena pausa entre gera√ß√µes
        await asyncio.sleep(1)
    
    # Resumo
    print("\n" + "=" * 60)
    print(f"üìä RESUMO:")
    print(f"   ‚úÖ Sucesso: {success} arquivos")
    print(f"   ‚ùå Falhas: {total - success} arquivos")
    
    # Listar arquivos criados
    print(f"\nüìÅ Arquivos no diret√≥rio de sa√≠da:")
    files = list(OUTPUT_DIR.glob("*.mp3"))
    if files:
        for f in sorted(files):
            size = f.stat().st_size / 1024
            print(f"   ‚úÖ {f.name} ({size:.1f} KB)")
    else:
        print(f"   ‚ùå Nenhum arquivo MP3 encontrado")
    
    # Criar arquivo de metadados
    metadata = {
        "generated_at": str(Path.cwd()),
        "voice": selected_voice,
        "total_files": total,
        "success": success,
        "failed": total - success,
        "files": [f.name for f in sorted(files)]
    }
    
    metadata_path = OUTPUT_DIR / "metadata.json"
    try:
        with open(metadata_path, 'w', encoding='utf-8') as f:
            json.dump(metadata, f, indent=2, ensure_ascii=False)
        print(f"\nüìÑ Metadados salvos em: {metadata_path}")
    except Exception as e:
        print(f"\n‚ö†Ô∏è  Erro ao salvar metadados: {e}")
    
    if success == total:
        print("\nüéâ SUCESSO! Todos os √°udios foram gerados!")
        print(f"üìÇ Verifique em: {OUTPUT_DIR}")
    elif success > 0:
        print(f"\n‚ö†Ô∏è  Processo parcialmente conclu√≠do. {success} de {total} arquivos gerados.")
    else:
        print("\n‚ùå Nenhum arquivo foi gerado. Verifique os erros acima.")

if __name__ == "__main__":
    # Verificar se est√° no Windows e configurar corretamente
    if sys.platform == 'win32':
        # No Windows, √†s vezes √© necess√°rio
        asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())
    
    # Executar
    asyncio.run(main())
